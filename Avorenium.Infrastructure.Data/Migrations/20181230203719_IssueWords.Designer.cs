// <auto-generated />
using System;
using Avorenium.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Avorenium.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AvoreniumDbContext))]
    [Migration("20181230203719_IssueWords")]
    partial class IssueWords
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Avorenium.Core.Domain.Entities.Data.Dbo.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn")
                        .HasColumnType("timestamp")
                        .HasMaxLength(3);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("varchar")
                        .HasMaxLength(300);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("ModifiedOn")
                        .HasColumnType("timestamp")
                        .HasMaxLength(3);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Issues","dbo");
                });

            modelBuilder.Entity("Avorenium.Core.Domain.Entities.Data.Dbo.IssueWord", b =>
                {
                    b.Property<int>("IssueId")
                        .HasColumnName("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("WordId")
                        .HasColumnName("WordId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn")
                        .HasColumnType("timestamp")
                        .HasMaxLength(3);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("ModifiedOn")
                        .HasColumnType("timestamp")
                        .HasMaxLength(3);

                    b.HasKey("IssueId", "WordId");

                    b.HasIndex("WordId");

                    b.ToTable("IssueWords","dbo");
                });

            modelBuilder.Entity("Avorenium.Core.Domain.Entities.Data.Dbo.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn")
                        .HasColumnType("timestamp")
                        .HasMaxLength(3);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("ModifiedOn")
                        .HasColumnType("timestamp")
                        .HasMaxLength(3);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("Text")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<int>("TypeId")
                        .HasColumnName("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Text")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Words","dbo");
                });

            modelBuilder.Entity("Avorenium.Core.Domain.Entities.Data.Dbo.WordType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CreatedBy")
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn")
                        .HasColumnType("timestamp")
                        .HasMaxLength(3);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("ModifiedBy")
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("ModifiedOn")
                        .HasColumnType("timestamp")
                        .HasMaxLength(3);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("Text")
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Text")
                        .IsUnique();

                    b.ToTable("WordTypes","dbo");
                });

            modelBuilder.Entity("Avorenium.Core.Domain.Entities.Data.Dbo.IssueWord", b =>
                {
                    b.HasOne("Avorenium.Core.Domain.Entities.Data.Dbo.Issue", "Issue")
                        .WithMany("Words")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Avorenium.Core.Domain.Entities.Data.Dbo.Word", "Word")
                        .WithMany("Issues")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Avorenium.Core.Domain.Entities.Data.Dbo.Word", b =>
                {
                    b.HasOne("Avorenium.Core.Domain.Entities.Data.Dbo.WordType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
